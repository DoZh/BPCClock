C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE BPCCLOCK
OBJECT MODULE PLACED IN bpcclock.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE bpcclock.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<reg52.h>
   3          #include<intrins.h>
   4          sbit BPC=P1^3;
   5          sbit RS=P1^0;
   6          sbit RW=P1^1;
   7          sbit LCDE=P1^2;
   8          
   9          int init1602();
  10          int transdata(unsigned char tdata);
  11          int command(unsigned char cmd);
  12          void Delay1ms();
  13          void Delay100ms();
  14          char bpcrecv(char recv[]);
  15          char processbpc();
  16          void writetime();
  17          void writestatus(char OK);
  18          void minplus();
  19          void secplus();
  20          void hourplus();
  21          void dayplus();
  22          void monthplus();
  23          //void yearplus();//’‚ªı“—æ≠Œﬁ“‚“Â¡À                               
  24          
  25          int count,countms,i,j,bits;
  26          char recvnum[20];
  27          int year=1,month=1,week=1,day=1,hour=0,minute=0,second=0;
  28          unsigned char code weekday[7][4]={{"Mon."},{"Tue."},{"Wed."},{"Thu."},{"Fri."},{"Sat."},{"Sun."}};
  29          char OK=0;
  30          unsigned int checkedminute;
  31          
  32          int main()
  33          {
  34   1              init1602();
  35   1              Delay1ms();
  36   1              Delay1ms();
  37   1              TMOD=0x01;
  38   1              //TH0=(65536-45)/256;//º”ÀŸ≤‚ ‘
  39   1              //TL0=(65536-45)%256;//º”ÀŸ≤‚ ‘
  40   1              TH0=(65536-46062)/256;
  41   1              TL0=(65536-46062)%256;
  42   1              EA=1;
  43   1              ET0=1;
  44   1              TR0=1;
  45   1              while(1)
  46   1              {
  47   2                      while(bpcrecv(recvnum)!=0);//writestatus(0); 
  48   2                      processbpc();
  49   2                      //writetime();
  50   2                      //writestatus(1);
  51   2                                                 
  52   2      
  53   2      
  54   2              }
  55   1      return 0;
C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 2   

  56   1      }
  57          
  58          char bpcrecv(char recv[])
  59          {
  60   1                      do
  61   1                      {
  62   2                              //writestatus(0);
  63   2                              for(count=0;BPC==0;count++)
  64   2                                      Delay1ms();
  65   2                              //if(count<10)writestatus(0);
  66   2                      }
  67   1                      while (count<1250) ;
  68   1                      for(bits=0;bits<19;bits++) 
  69   1                      {
  70   2                              while(BPC==0);//∫√∞…£¨œ»µ»¥˝’˝Ã¯±‰¿¥ªÒµ√æ´»∑ ±º‰
  71   2                              for(count=0;BPC==1;count++)
  72   2                                      Delay1ms();
  73   2                              if(count<70) return 1;
  74   2                              recv[bits]=(count+30)/100-1;
  75   2                               
  76   2                      }
  77   1                      OK=1;
  78   1                      checkedminute=0;
  79   1                      return 0;
  80   1      }
  81          
  82          char processbpc()
  83          {       
  84   1              int timedelay;
  85   1              for(timedelay=(10-(recvnum[18])+1);timedelay<=10;timedelay++)
  86   1                      Delay100ms();   //æ´»∑µ„
  87   1              countms=7;
  88   1              switch(recvnum[0])
  89   1              {
  90   2                      case 0:second=19;break;
  91   2                      case 1:second=39;break;
  92   2                      case 2:second=59;break;
  93   2                      //default:return 1;
  94   2              }
  95   1              
  96   1              hour=recvnum[2]*4+recvnum[3]*1;
  97   1              if(recvnum[9]>=2)hour+=12;
  98   1              minute=recvnum[4]*16+recvnum[5]*4+recvnum[6]*1;
  99   1              week=recvnum[7]*4+recvnum[8]*1;
 100   1              day=recvnum[10]*16+recvnum[11]*4+recvnum[12]*1;
 101   1              month=recvnum[13]*4+recvnum[14]*1;
 102   1              year=recvnum[15]*16+recvnum[16]*4+recvnum[17]*1;
 103   1              //if(recvnum[18]>=2)year+=64;
 104   1              //if(second==60)minute++,second=0;
 105   1              //if(minute==60)hour++,minute=0;
 106   1              //if(hour==24)day++,hour==0;
 107   1      
 108   1              return 0;
 109   1      }
 110          
 111          void writetime()
 112          {
 113   1              command(0x80);
 114   1              transdata('2');
 115   1              transdata(year/100+48);
 116   1              transdata(year%100/10+48);
 117   1              transdata(year%10+48);
C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 3   

 118   1              transdata('-');
 119   1              transdata(month/10+48);
 120   1              transdata(month%10+48);
 121   1              transdata('-');
 122   1              transdata(day/10+48);
 123   1              transdata(day%10+48);
 124   1              transdata(' ');
 125   1              transdata(weekday[week-1][0]);
 126   1              transdata(weekday[week-1][1]);
 127   1              transdata(weekday[week-1][2]);
 128   1              transdata(weekday[week-1][3]);
 129   1              //transdata(recvnum[0]+48);
 130   1      }
 131          
 132          void writestatus(char OK)
 133          {
 134   1              command(0xc0);
 135   1              transdata(hour/10+48);
 136   1              transdata(hour%10+48);
 137   1              transdata(':');
 138   1              transdata(minute/10+48);
 139   1              transdata(minute%10+48);
 140   1              transdata(':');
 141   1              transdata(second/10+48);
 142   1              transdata(second%10+48);
 143   1              transdata(' ');
 144   1              if(OK)
 145   1              {
 146   2                      transdata('C');
 147   2                      transdata('h');
 148   2                      transdata('e');
 149   2                      transdata('c');
 150   2                      transdata('k');
 151   2                      transdata('e');
 152   2                      transdata('d');
 153   2              }
 154   1              else
 155   1              {
 156   2                      transdata('N');
 157   2                      transdata('o');
 158   2                      transdata('t');
 159   2                      transdata('R');
 160   2                      transdata('e');
 161   2                      transdata('c');
 162   2                      transdata('v');
 163   2              }
 164   1      }
 165          
 166          
 167          
 168          void Delay1ms()         //@11.0592MHz,1ms
 169          {
 170   1              unsigned char i, j;
 171   1      
 172   1              _nop_();
 173   1              i = 2;
 174   1              j = 199;
 175   1              do
 176   1              {
 177   2                      while (--j);
 178   2              } while (--i);
 179   1      }
C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 4   

 180          
 181          
 182           void Delay100ms()              //@11.0592MHz
 183          {
 184   1              unsigned char i, j;
 185   1      
 186   1              i = 180;
 187   1              j = 73;
 188   1              do
 189   1              {
 190   2                      while (--j);
 191   2              } while (--i);
 192   1      }
 193          
 194           int init1602()
 195           {      
 196   1              LCDE=0;
 197   1              RW=0;
 198   1              command(0x38);
 199   1              command(0x0c);
 200   1              command(0x06);
 201   1              command(0x01);
 202   1              command(0x80);
 203   1              return 0;
 204   1      }
 205          
 206          int command(unsigned char cmd)
 207          {
 208   1              RS=0;
 209   1              P0=cmd;
 210   1              //delay(2);
 211   1              Delay1ms();
 212   1              LCDE=1;
 213   1              //delay(5);
 214   1              //delay(1);//µ»¥˝√¸¡Ó∂¡»°ÕÍ±œ£¨LCD∫√øÏ£°
 215   1              //_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 216   1              //_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();  //’Êµƒ≤ªƒ‹‘Ÿø
             -Ï¡À
 217   1              Delay1ms();
 218   1              LCDE=0;
 219   1              return 0;
 220   1      }
 221          
 222          int transdata(unsigned char tdata)
 223          {
 224   1              RS=1;
 225   1              P0=tdata;
 226   1              _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 227   1              //delay(2);
 228   1              LCDE=1;
 229   1              //delay(5);
 230   1              _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_
             -nop_();_nop_();_nop_();_nop_();
 231   1              LCDE=0;
 232   1              return 0;
 233   1      }
 234          
 235          void secplus() 
 236          {
 237   1              if(++second==60)
 238   1              {
 239   2                      second=0;
C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 5   

 240   2                      minplus();
 241   2              }
 242   1              writetime();
 243   1              writestatus(OK);
 244   1      }
 245          
 246          void minplus() 
 247          {
 248   1              if(++checkedminute>=60)
 249   1                      OK=0;
 250   1              if(++minute==60)
 251   1              {
 252   2                      minute=0;
 253   2                      hourplus();
 254   2              }
 255   1      
 256   1      
 257   1      
 258   1      }
 259          
 260          
 261          void hourplus()
 262          {
 263   1              if(++hour==24)
 264   1              {
 265   2                      hour=0;
 266   2                      dayplus();
 267   2              }
 268   1      
 269   1      }
 270          
 271          void dayplus()
 272          {       
 273   1              if(++week==8)
 274   1                      week=0;
 275   1              if(day==28&&month==2&&(year%4!=0&&year!=100))
 276   1                      {monthplus();day=0;}
 277   1              if(day==29&&month==2)
 278   1                      {monthplus();day=0;}
 279   1              if(day==30&&(month==4||month==6||month==9||month==11))
 280   1                      {monthplus();day=0;}
 281   1              if(day==31)
 282   1                      {monthplus();day=0;}
 283   1              day++;
 284   1      }
 285          
 286          void monthplus()
 287          {
 288   1              if(month==12)
 289   1                      {year++;month=0;}
 290   1              month++;
 291   1      }
 292          
 293          void seccount() interrupt 1     //∂® ±∆˜£¨50ms*20ms
 294          {
 295   1              //TH0=(65536-45)/256;//º”ÀŸ≤‚ ‘
 296   1              //TL0=(65536-45)%256;//º”ÀŸ≤‚ ‘
 297   1              TH0=(65536-46062)/256;
 298   1              TL0=(65536-46062)%256;
 299   1              //scount=1;
 300   1              countms++; //√ø¥Œ∂® ±∆˜∆Ù∂ØæÕœ‡µ±”⁄ « ±º‰¡˜ ≈¡À20ms£¨À˘“‘”¶∏√‘⁄≈–∂œ «∑ÒµΩ1s÷Æ«∞¿€º”º∆ ˝∆˜
 301   1              if(countms==20)
C51 COMPILER V9.00   BPCCLOCK                                                              04/20/2013 22:14:41 PAGE 6   

 302   1              {
 303   2                      countms=0;
 304   2                      
 305   2                      secplus();
 306   2                                      }
 307   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1472    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     47       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
